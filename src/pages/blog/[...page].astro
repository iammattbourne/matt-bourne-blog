---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from '../../components/BlogPost.astro';
import Pagination from '../../components/Pagination.astro';

export async function getStaticPaths({ paginate }) {
    const allPosts = await Astro.glob('../posts/*.md');
    const formattedPosts = allPosts.sort((a, b) => Date.parse(a.frontmatter.pubDate) - Date.parse(b.frontmatter.pubDate)).reverse();

  return paginate(formattedPosts, {
    pageSize: 3,
  })
}
const { page } = Astro.props;

const allPosts = await Astro.glob('../posts/*.md');
const pageTitle = "My Blog";
const pageIntro = "Documenting my career and unlocking my creativity one step at a time"
const pathname = new URL(Astro.request.url).pathname.split('/');
const firstPath = pathname[1];
---

<BaseLayout pageTitle={pageTitle} pageIntro={pageIntro}>
    <div class="lg:my-12 my-8 grid gap-10 max-w-lg lg:max-w-none mx-auto lg:grid-cols-3">
        {page.data.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} description={post.frontmatter.description} tags={post.frontmatter.tags} date={post.frontmatter.pubDate} />)}   
    </div>  
    {allPosts.length > 3 ? (
      <div class="mt-4">
        <Pagination length={page.lastPage} 
          currentUrl={page.url.current} 
          currentPage={page.currentPage} 
          firstUrl={`/${firstPath}`} 
          prevUrl={page.url.prev} 
          nextUrl={page.url.next} 
          lastUrl={`/${firstPath}/${page.lastPage}`}
        />
      </div>
    ) : null}
</BaseLayout>